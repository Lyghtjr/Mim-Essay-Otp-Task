{"version":3,"sources":["logo.svg","components/Verification_Otp.js","App.js","reportWebVitals.js","index.js"],"names":["Verification_Otp","useState","open","setOpen","otp","setOtp","number","setNumber","Box","sx","position","top","left","transform","bgcolor","p","Typography","variant","align","marginBottom","TextField","label","color","focused","marginRight","type","value","onChange","e","target","Button","onClick","Dialog","onClose","aria-labelledby","padding","Divider","DialogContent","DialogContentText","id","maxLength","element","isNaN","nextSibling","focus","handleChange","display","justifyContent","m","pb","marginTop","borderRadius","paddingLeft","paddingRight","size","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qLAAe,I,oGCiIAA,EAvHU,WAAO,IAAD,EACLC,oBAAS,GADJ,mBACtBC,EADsB,KAChBC,EADgB,OAGPF,mBAAS,IAHF,mBAGtBG,EAHsB,KAGjBC,EAHiB,OAKDJ,mBAAS,IALR,mBAKtBK,EALsB,KAKdC,EALc,KAgC7B,OACE,gCACE,eAACC,EAAA,EAAD,CAAKC,GAnBK,CACZC,SAAU,WACVC,IAAK,MACLC,KAAM,MACNC,UAAW,wBACXC,QAAS,QACTC,EAAG,GAaD,UACE,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAAST,GAAI,CAAEU,aAAc,GAA5D,yDAGA,cAACC,EAAA,EAAD,CACEC,MAAM,gBACNC,MAAM,YACNC,SAAO,EACPd,GAAI,CAAEe,YAAa,GACnBC,KAAK,SACLC,MAAOpB,EACPqB,SAAU,SAACC,GACTrB,EAAUqB,EAAEC,OAAOH,UAIvB,cAACI,EAAA,EAAD,CAAQb,QAAQ,YAAYK,MAAM,UAAUS,QA3ChC,WAChB5B,GAAQ,IA0CJ,6BAIF,8BACE,eAAC6B,EAAA,EAAD,CACE9B,KAAMA,EACN+B,QA9CW,WACjB9B,GAAQ,IA8CF+B,kBAAgB,oBAHlB,UAKE,cAAClB,EAAA,EAAD,CAAYC,QAAQ,KAAKC,MAAM,SAAST,GAAI,CAAE0B,QAAS,GAAvD,+CACA,cAACC,EAAA,EAAD,IACA,eAACC,EAAA,EAAD,WACE,eAACC,EAAA,EAAD,+CACoChC,KAEpC,8BACE,uBACEiC,GAAG,cACHd,KAAK,OACLe,UAAU,IACVd,MAAOtB,EACPuB,SAAU,SAACC,IAhDJ,SAACa,GACpB,GAAIC,MAAMD,EAAQf,OAAQ,OAAO,EACjCrB,EAAOoC,EAAQf,OACXe,EAAQE,aACVF,EAAQE,YAAYC,QA6CRC,CAAajB,EAAEC,gBAMvB,eAACrB,EAAA,EAAD,CACEC,GAAI,CACFqC,QAAS,OACTC,eAAgB,gBAChBzB,MAAO,OACPa,QAAS,sBALb,UAQE,8CACA,+CAGF,cAAC3B,EAAA,EAAD,CACEC,GAAI,CACFqC,QAAS,OACTC,eAAgB,SAChBC,EAAG,EACHC,GAAI,GALR,SAQE,cAACnB,EAAA,EAAD,CACEb,QAAQ,YACRK,MAAM,UACNb,GAAI,CACFyC,UAAW,EACXC,aAAc,GACdC,YAAa,EACbC,aAAc,GAEhBC,KAAK,SATP,4CCnGGC,MANf,WACE,OACC,cAAC,EAAD,KCMYC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.5b0ff2e1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React, { useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport { Typography, Box, TextField } from \"@mui/material\";\nimport \"../styles/Verification_Otp.css\";\nimport { Divider } from \"@material-ui/core\";\n\nconst Verification_Otp = () => {\n  const [open, setOpen] = useState(false);\n\n  const [otp, setOtp] = useState(\"\");\n\n  const [number, setNumber] = useState(\"\");\n\n  const modelOpen = () => {\n    setOpen(true);\n  };\n\n  const modelClose = () => {\n    setOpen(false);\n  };\n\n  const style = {\n    position: \"absolute\",\n    top: \"50%\",\n    left: \"50%\",\n    transform: \"translate(-50%, -50%)\",\n    bgcolor: \"white\",\n    p: 5,\n  };\n\n  const handleChange = (element) => {\n    if (isNaN(element.value)) return false;\n    setOtp(element.value);\n    if (element.nextSibling) {\n      element.nextSibling.focus();\n    }\n  };\n\n  return (\n    <div>\n      <Box sx={style}>\n        <Typography variant=\"h6\" align=\"center\" sx={{ marginBottom: 5 }}>\n          Enter Your Mobile Number to Receive OTP....\n        </Typography>\n        <TextField\n          label=\"Mobile Number\"\n          color=\"secondary\"\n          focused\n          sx={{ marginRight: 2 }}\n          type=\"number\"\n          value={number}\n          onChange={(e) => {\n            setNumber(e.target.value);\n          }}\n        />\n\n        <Button variant=\"contained\" color=\"primary\" onClick={modelOpen}>\n          Generate OTP\n        </Button>\n      </Box>\n      <div>\n        <Dialog\n          open={open}\n          onClose={modelClose}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <Typography variant=\"h5\" align=\"center\" sx={{ padding: 3 }}>MIM-ESSAY-TASK PHONE VERIFICATION</Typography>\n          <Divider />\n          <DialogContent>\n            <DialogContentText>\n              Enter the OTP you've received on {number}\n            </DialogContentText>\n            <div>\n              <input\n                id=\"partitioned\"\n                type=\"text\"\n                maxLength=\"6\"\n                value={otp}\n                onChange={(e) => {\n                  handleChange(e.target);\n                }}\n              />\n            </div>\n          </DialogContent>\n\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"space-between\",\n              color: \"blue\",\n              padding: \"15px 35px 0px 35px\",\n            }}\n          >\n            <p>Change Number</p>\n            <p>Re-Send OTP</p>\n          </Box>\n\n          <Box\n            sx={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              m: 1,\n              pb: 2,\n            }}\n          >\n            <Button\n              variant=\"contained\"\n              color=\"success\"\n              sx={{\n                marginTop: 2,\n                borderRadius: 15,\n                paddingLeft: 5,\n                paddingRight: 5,\n              }}\n              size=\"medium\"\n            >\n              Verify Phone Number\n            </Button>\n          </Box>\n        </Dialog>\n      </div>\n    </div>\n  );\n};\n\nexport default Verification_Otp;\n","import logo from './logo.svg';\nimport './App.css';\nimport Verification_Otp from './components/Verification_Otp';\n\nfunction App() {\n  return (\n   <Verification_Otp/>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}